<?php

namespace Proxies;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class ActualSkillSiteBundleEntityCountryProxy extends \ActualSkill\SiteBundle\Entity\Country implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }
    
    
    public function getId()
    {
        $this->__load();
        return parent::getId();
    }

    public function setIso2($iso2)
    {
        $this->__load();
        return parent::setIso2($iso2);
    }

    public function getIso2()
    {
        $this->__load();
        return parent::getIso2();
    }

    public function setIso3($iso3)
    {
        $this->__load();
        return parent::setIso3($iso3);
    }

    public function getIso3()
    {
        $this->__load();
        return parent::getIso3();
    }

    public function setIsoNumeric($isoNumeric)
    {
        $this->__load();
        return parent::setIsoNumeric($isoNumeric);
    }

    public function getIsoNumeric()
    {
        $this->__load();
        return parent::getIsoNumeric();
    }

    public function setFips($fips)
    {
        $this->__load();
        return parent::setFips($fips);
    }

    public function getFips()
    {
        $this->__load();
        return parent::getFips();
    }

    public function setCountry($country)
    {
        $this->__load();
        return parent::setCountry($country);
    }

    public function getCountry()
    {
        $this->__load();
        return parent::getCountry();
    }

    public function setCapital($capital)
    {
        $this->__load();
        return parent::setCapital($capital);
    }

    public function getCapital()
    {
        $this->__load();
        return parent::getCapital();
    }

    public function setArea($area)
    {
        $this->__load();
        return parent::setArea($area);
    }

    public function getArea()
    {
        $this->__load();
        return parent::getArea();
    }

    public function setPopulation($population)
    {
        $this->__load();
        return parent::setPopulation($population);
    }

    public function getPopulation()
    {
        $this->__load();
        return parent::getPopulation();
    }

    public function setContinent($continent)
    {
        $this->__load();
        return parent::setContinent($continent);
    }

    public function getContinent()
    {
        $this->__load();
        return parent::getContinent();
    }

    public function setCurrencyCode($currencyCode)
    {
        $this->__load();
        return parent::setCurrencyCode($currencyCode);
    }

    public function getCurrencyCode()
    {
        $this->__load();
        return parent::getCurrencyCode();
    }

    public function setCurrencyName($currencyName)
    {
        $this->__load();
        return parent::setCurrencyName($currencyName);
    }

    public function getCurrencyName()
    {
        $this->__load();
        return parent::getCurrencyName();
    }

    public function setLanguages($languages)
    {
        $this->__load();
        return parent::setLanguages($languages);
    }

    public function getLanguages()
    {
        $this->__load();
        return parent::getLanguages();
    }

    public function setGeonameid($geonameid)
    {
        $this->__load();
        return parent::setGeonameid($geonameid);
    }

    public function getGeonameid()
    {
        $this->__load();
        return parent::getGeonameid();
    }

    public function addPlayers(\ActualSkill\SiteBundle\Entity\Player $players)
    {
        $this->__load();
        return parent::addPlayers($players);
    }

    public function getPlayers()
    {
        $this->__load();
        return parent::getPlayers();
    }

    public function addClubs(\ActualSkill\SiteBundle\Entity\Club $clubs)
    {
        $this->__load();
        return parent::addClubs($clubs);
    }

    public function getClubs()
    {
        $this->__load();
        return parent::getClubs();
    }

    public function __toString()
    {
        $this->__load();
        return parent::__toString();
    }


    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'iso2', 'iso3', 'iso_numeric', 'fips', 'country', 'capital', 'area', 'population', 'continent', 'currency_code', 'currency_name', 'languages', 'geonameid', 'players', 'clubs');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields AS $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}